{"ast":null,"code":"var _jsxFileName = \"F:\\\\Prasad\\\\DEV\\\\myProjects\\\\MyBlogs\\\\src\\\\Pages\\\\Dashboard\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport classes from './Dashboard.module.css';\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = props => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [postList, setPostList] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      const response = await fetch('https://dashboardcrud-default-rtdb.firebaseio.com/new-post.json');\n      const responseData = await response.json();\n      let loadedData = [];\n\n      for (let i in responseData) {\n        loadedData.push({\n          id: i,\n          item: responseData[i]\n        });\n      } // console.log(responseData);\n\n\n      setPostList(loadedData);\n      console.log(postList);\n    };\n\n    fetchData().catch(error => {\n      alert(error);\n    });\n    fetchData().finally(() => {\n      setIsLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [postList.length !== 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Hello World\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 38\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"1hlQNZRgGCuu29G0Gl0Pm8uVTKI=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["F:/Prasad/DEV/myProjects/MyBlogs/src/Pages/Dashboard/Dashboard.js"],"names":["classes","LoadingSpinner","useEffect","useState","Dashboard","props","isLoading","setIsLoading","postList","setPostList","fetchData","response","fetch","responseData","json","loadedData","i","push","id","item","console","log","catch","error","alert","finally","length"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,wBAApB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,SAAS,GAAG,YAAY;AAC1BH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAD,CAA5B;AACA,YAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACA,UAAIC,UAAU,GAAG,EAAjB;;AACA,WAAK,IAAIC,CAAT,IAAcH,YAAd,EAA4B;AACxBE,QAAAA,UAAU,CAACE,IAAX,CAAgB;AACZC,UAAAA,EAAE,EAAEF,CADQ;AAEZG,UAAAA,IAAI,EAAEN,YAAY,CAACG,CAAD;AAFN,SAAhB;AAIH,OAVyB,CAW1B;;;AACAP,MAAAA,WAAW,CAACM,UAAD,CAAX;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;AACH,KAdD;;AAeAE,IAAAA,SAAS,GAAGY,KAAZ,CAAmBC,KAAD,IAAW;AACzBC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACH,KAFD;AAGAb,IAAAA,SAAS,GAAGe,OAAZ,CAAoB,MAAM;AACtBlB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAFD;AAGH,GAtBQ,EAsBN,EAtBM,CAAT;AAwBA,sBACI;AAAA,eACKC,QAAQ,CAACkB,MAAT,KAAmB,CAAnB,iBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD7B,EAEKpB,SAAS,iBAAI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAFlB;AAAA,kBADJ;AAMH,CAlCD;;GAAMF,S;;KAAAA,S;AAoCN,eAAeA,SAAf","sourcesContent":["import classes from './Dashboard.module.css';\r\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst Dashboard = (props) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [postList, setPostList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setIsLoading(true);\r\n            const response = await fetch('https://dashboardcrud-default-rtdb.firebaseio.com/new-post.json');\r\n            const responseData = await response.json();\r\n            let loadedData = [];\r\n            for (let i in responseData) {\r\n                loadedData.push({\r\n                    id: i,\r\n                    item: responseData[i]\r\n                });\r\n            }\r\n            // console.log(responseData);\r\n            setPostList(loadedData);\r\n            console.log(postList);\r\n        }\r\n        fetchData().catch((error) => {\r\n            alert(error);\r\n        });\r\n        fetchData().finally(() => {\r\n            setIsLoading(false);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {postList.length !==0 && <h3>Hello World</h3>}\r\n            {isLoading && <LoadingSpinner />}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}