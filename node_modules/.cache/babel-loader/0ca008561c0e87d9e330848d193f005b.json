{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst PostsSlice = createSlice({\n  name: 'Posts',\n  initialState: {\n    items: []\n  },\n  reducers: {\n    setPostData(state, action) {\n      const existingItem = state.items.find(el => el.id === action.payload.id);\n\n      if (!existingItem) {\n        state.items.push({\n          id: action.payload.id,\n          title: action.payload.item.title,\n          content: action.payload.item.content,\n          section: action.payload.item.section\n        });\n      }\n    },\n\n    setPost(state, action) {},\n\n    clearPost(state, action) {\n      state.items = [];\n    }\n\n  }\n});\nexport const PostsAction = PostsSlice.actions;\nexport default PostsSlice;","map":{"version":3,"sources":["F:/Prasad/DEV/myProjects/MyBlogs/src/store/posts-slice.js"],"names":["createSlice","PostsSlice","name","initialState","items","reducers","setPostData","state","action","existingItem","find","el","id","payload","push","title","item","content","section","setPost","clearPost","PostsAction","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,UAAU,GAAGD,WAAW,CAAC;AAC3BE,EAAAA,IAAI,EAAE,OADqB;AAE3BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,KAAK,EAAE;AADG,GAFa;AAK3BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACvB,YAAMC,YAAY,GAAGF,KAAK,CAACH,KAAN,CAAYM,IAAZ,CAAkBC,EAAD,IAAQA,EAAE,CAACC,EAAH,KAAUJ,MAAM,CAACK,OAAP,CAAeD,EAAlD,CAArB;;AACA,UAAI,CAACH,YAAL,EAAmB;AACfF,QAAAA,KAAK,CAACH,KAAN,CAAYU,IAAZ,CAAiB;AACbF,UAAAA,EAAE,EAAEJ,MAAM,CAACK,OAAP,CAAeD,EADN;AAEbG,UAAAA,KAAK,EAAEP,MAAM,CAACK,OAAP,CAAeG,IAAf,CAAoBD,KAFd;AAGbE,UAAAA,OAAO,EAAET,MAAM,CAACK,OAAP,CAAeG,IAAf,CAAoBC,OAHhB;AAIbC,UAAAA,OAAO,EAAEV,MAAM,CAACK,OAAP,CAAeG,IAAf,CAAoBE;AAJhB,SAAjB;AAMH;AACJ,KAXK;;AAYNC,IAAAA,OAAO,CAACZ,KAAD,EAAQC,MAAR,EAAgB,CAEtB,CAdK;;AAeNY,IAAAA,SAAS,CAACb,KAAD,EAAQC,MAAR,EAAgB;AACrBD,MAAAA,KAAK,CAACH,KAAN,GAAc,EAAd;AACH;;AAjBK;AALiB,CAAD,CAA9B;AA0BA,OAAO,MAAMiB,WAAW,GAAGpB,UAAU,CAACqB,OAA/B;AACP,eAAerB,UAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst PostsSlice = createSlice({\r\n    name: 'Posts',\r\n    initialState: {\r\n        items: []\r\n    },\r\n    reducers: {\r\n        setPostData(state, action) {\r\n            const existingItem = state.items.find((el) => el.id === action.payload.id);\r\n            if (!existingItem) {\r\n                state.items.push({\r\n                    id: action.payload.id,\r\n                    title: action.payload.item.title,\r\n                    content: action.payload.item.content,\r\n                    section: action.payload.item.section\r\n                });\r\n            }\r\n        },\r\n        setPost(state, action) {\r\n            \r\n        },\r\n        clearPost(state, action) {\r\n            state.items = [];\r\n        }\r\n    }\r\n});\r\n\r\nexport const PostsAction = PostsSlice.actions;\r\nexport default PostsSlice;"]},"metadata":{},"sourceType":"module"}