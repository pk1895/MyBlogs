{"ast":null,"code":"var _jsxFileName = \"F:\\\\Prasad\\\\DEV\\\\myProjects\\\\dashboardCRUD\\\\src\\\\Pages\\\\Authentication\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport classes from './Login.module.css';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport firebase from '../../firebase';\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LogIn = () => {\n  _s();\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredPass, setEnteredPass] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isPasswordHidden, setIsPasswordHidden] = useState(true);\n  const history = useHistory();\n\n  const onAddEmail = evt => {\n    setEnteredEmail(evt.target.value);\n  };\n\n  const onAddPass = evt => {\n    setEnteredPass(evt.target.value);\n  };\n\n  const showHidePassword = () => {\n    setIsPasswordHidden(!isPasswordHidden);\n  };\n\n  const otherLogin = argProvider => {\n    var provider;\n\n    switch (argProvider) {\n      case 'Google':\n        provider = new firebase.auth.GoogleAuthProvider();\n        break;\n    }\n\n    return firebase.auth().signInWithPopup(provider).then(result => {\n      var credential = result.credential; // This gives you a Google Access Token. You can use it to access the Google API.\n\n      var token = credential.accessToken;\n      console.log(token);\n      var user = result.user;\n      return user;\n    }).then(res => {\n      alert('Log In successfully!');\n      history.push('/dashboard');\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const submitHandler = evt => {\n    evt.preventDefault();\n    setIsLoading(true);\n    fetch('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCEuKukNRynt7pmOA1UybJ2M1jN2iUShzg', {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPass,\n        returnSecureToken: true\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.ok) {\n        setIsLoading(true);\n        console.log(res); // isLoggedIn = true;\n        // dispatch(authActions.setUserData({\n        //     userId: enteredEmail,\n        //     isLoggedIn\n        // }));\n\n        history.push('/dashboard');\n      } else {\n        return res.json().then(data => {\n          setIsLoading(false);\n          alert(data.error.message);\n        });\n      }\n    });\n  };\n\n  const onSignUp = () => {\n    history.push('/register');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [!isLoading && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LOG IN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 28\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          onChange: onAddEmail,\n          value: enteredEmail,\n          required: true,\n          placeholder: \"Enter Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: isPasswordHidden ? 'password' : 'text',\n          id: \"password\",\n          onChange: onAddPass,\n          value: enteredPass,\n          required: true,\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: showHidePassword,\n          style: {\n            alignContent: 'start'\n          },\n          children: \"Show / Hide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: onSignUp,\n          children: \"Create new account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 28\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.logo,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: otherLogin.bind(null, 'Google'),\n        children: \"Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 28\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LogIn, \"Tz/wJjBQslMNsnY2g/l5KfDzYZ0=\", false, function () {\n  return [useHistory];\n});\n\n_c = LogIn;\nexport default LogIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"sources":["F:/Prasad/DEV/myProjects/dashboardCRUD/src/Pages/Authentication/Login.js"],"names":["classes","useState","useHistory","firebase","LoadingSpinner","LogIn","enteredEmail","setEnteredEmail","enteredPass","setEnteredPass","isLoading","setIsLoading","isPasswordHidden","setIsPasswordHidden","history","onAddEmail","evt","target","value","onAddPass","showHidePassword","otherLogin","argProvider","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","credential","token","accessToken","console","log","user","res","alert","push","catch","error","submitHandler","preventDefault","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","ok","json","data","message","onSignUp","form","control","alignContent","actions","toggle","logo","bind"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAMa,OAAO,GAAGZ,UAAU,EAA1B;;AAEA,QAAMa,UAAU,GAAIC,GAAD,IAAS;AACxBT,IAAAA,eAAe,CAACS,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAf;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAIH,GAAD,IAAS;AACvBP,IAAAA,cAAc,CAACO,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAd;AACH,GAFD;;AAIA,QAAME,gBAAgB,GAAG,MAAM;AAC3BP,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACH,GAFD;;AAKA,QAAMS,UAAU,GAAIC,WAAD,IAAiB;AAChC,QAAIC,QAAJ;;AACA,YAAQD,WAAR;AACI,WAAK,QAAL;AACIC,QAAAA,QAAQ,GAAG,IAAIpB,QAAQ,CAACqB,IAAT,CAAcC,kBAAlB,EAAX;AACA;AAHR;;AAMA,WAAOtB,QAAQ,CAACqB,IAAT,GAAgBE,eAAhB,CAAgCH,QAAhC,EAA0CI,IAA1C,CAAgDC,MAAD,IAAY;AAC9D,UAAIC,UAAU,GAAGD,MAAM,CAACC,UAAxB,CAD8D,CAE9D;;AACA,UAAIC,KAAK,GAAGD,UAAU,CAACE,WAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,UAAII,IAAI,GAAGN,MAAM,CAACM,IAAlB;AACA,aAAOA,IAAP;AAEH,KARM,EAQJP,IARI,CAQEQ,GAAD,IAAS;AACbC,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACAtB,MAAAA,OAAO,CAACuB,IAAR,CAAa,YAAb;AACH,KAXM,EAWJC,KAXI,CAWGC,KAAD,IAAW;AAChBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH,KAbM,CAAP;AAcH,GAtBD;;AAwBA,QAAMC,aAAa,GAAIxB,GAAD,IAAS;AAC3BA,IAAAA,GAAG,CAACyB,cAAJ;AACA9B,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA+B,IAAAA,KAAK,CAAC,mHAAD,EACD;AACIC,MAAAA,MAAM,EAAE,MADZ;AAEIC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,KAAK,EAAEzC,YADU;AAEjB0C,QAAAA,QAAQ,EAAExC,WAFO;AAGjByC,QAAAA,iBAAiB,EAAE;AAHF,OAAf,CAFV;AAOIC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAPb,KADC,CAAL,CAYEvB,IAZF,CAYOQ,GAAG,IAAI;AACV,UAAIA,GAAG,CAACgB,EAAR,EAAY;AACRxC,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAqB,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ,EAFQ,CAGR;AACA;AACA;AACA;AACA;;AACArB,QAAAA,OAAO,CAACuB,IAAR,CAAa,YAAb;AACH,OATD,MASO;AACH,eAAOF,GAAG,CAACiB,IAAJ,GAAWzB,IAAX,CAAgB0B,IAAI,IAAI;AAC3B1C,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAyB,UAAAA,KAAK,CAACiB,IAAI,CAACd,KAAL,CAAWe,OAAZ,CAAL;AACH,SAHM,CAAP;AAIH;AACJ,KA5BD;AA6BH,GAhCD;;AAkCA,QAAMC,QAAQ,GAAG,MAAM;AACnBzC,IAAAA,OAAO,CAACuB,IAAR,CAAa,WAAb;AACH,GAFD;;AAIA,sBACI;AAAS,IAAA,SAAS,EAAErC,OAAO,CAACwB,IAA5B;AAAA,eACK,CAACd,SAAD,iBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADnB,EAEK,CAACA,SAAD,iBAAc;AAAM,MAAA,QAAQ,EAAE8B,aAAhB;AAA+B,MAAA,SAAS,EAAExC,OAAO,CAACwD,IAAlD;AAAA,8BACX;AAAK,QAAA,SAAS,EAAExD,OAAO,CAACyD,OAAxB;AAAA,+BACI;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,EAAE,EAAC,OAAvB;AAA+B,UAAA,QAAQ,EAAE1C,UAAzC;AAAqD,UAAA,KAAK,EAAET,YAA5D;AAA0E,UAAA,QAAQ,MAAlF;AAAmF,UAAA,WAAW,EAAC;AAA/F;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADW,eAIX;AAAK,QAAA,SAAS,EAAEN,OAAO,CAACyD,OAAxB;AAAA,gCACI;AAAO,UAAA,IAAI,EAAE7C,gBAAgB,GAAG,UAAH,GAAgB,MAA7C;AAAqD,UAAA,EAAE,EAAC,UAAxD;AAAmE,UAAA,QAAQ,EAAEO,SAA7E;AAAwF,UAAA,KAAK,EAAEX,WAA/F;AAA4G,UAAA,QAAQ,MAApH;AAAqH,UAAA,WAAW,EAAC;AAAjI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,OAAO,EAAEY,gBAAjB;AAAmC,UAAA,KAAK,EAAE;AAACsC,YAAAA,YAAY,EAAC;AAAd,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJW,eASX;AAAK,QAAA,SAAS,EAAE1D,OAAO,CAAC2D,OAAxB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,SAAS,EAAE3D,OAAO,CAAC4D,MAFvB;AAGI,UAAA,OAAO,EAAEL,QAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATW;AAAA;AAAA;AAAA;AAAA;AAAA,YAFnB,EAqBK,CAAC7C,SAAD,iBAAc;AAAK,MAAA,SAAS,EAAEV,OAAO,CAAC6D,IAAxB;AAAA,6BACX;AAAQ,QAAA,OAAO,EAAExC,UAAU,CAACyC,IAAX,CAAgB,IAAhB,EAAsB,QAAtB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADW;AAAA;AAAA;AAAA;AAAA,YArBnB,EA0BKpD,SAAS,iBAAI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YA1BlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CAhHD;;GAAML,K;UAKcH,U;;;KALdG,K;AAkHN,eAAeA,KAAf","sourcesContent":["import classes from './Login.module.css';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport firebase from '../../firebase';\r\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\r\n\r\nconst LogIn = () => {\r\n    const [enteredEmail, setEnteredEmail] = useState('');\r\n    const [enteredPass, setEnteredPass] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isPasswordHidden, setIsPasswordHidden] = useState(true);\r\n    const history = useHistory();\r\n\r\n    const onAddEmail = (evt) => {\r\n        setEnteredEmail(evt.target.value);\r\n    }\r\n\r\n    const onAddPass = (evt) => {\r\n        setEnteredPass(evt.target.value);\r\n    }\r\n\r\n    const showHidePassword = () => {\r\n        setIsPasswordHidden(!isPasswordHidden);\r\n    }\r\n\r\n\r\n    const otherLogin = (argProvider) => {\r\n        var provider;\r\n        switch (argProvider) {\r\n            case 'Google':\r\n                provider = new firebase.auth.GoogleAuthProvider();\r\n                break;\r\n        }\r\n\r\n        return firebase.auth().signInWithPopup(provider).then((result) => {\r\n            var credential = result.credential;\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            var token = credential.accessToken;\r\n            console.log(token);\r\n            var user = result.user;\r\n            return user;\r\n\r\n        }).then((res) => {\r\n            alert('Log In successfully!');\r\n            history.push('/dashboard');\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    const submitHandler = (evt) => {\r\n        evt.preventDefault();\r\n        setIsLoading(true);\r\n        fetch('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCEuKukNRynt7pmOA1UybJ2M1jN2iUShzg',\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: enteredEmail,\r\n                    password: enteredPass,\r\n                    returnSecureToken: true\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(res => {\r\n            if (res.ok) {\r\n                setIsLoading(true);\r\n                console.log(res);\r\n                // isLoggedIn = true;\r\n                // dispatch(authActions.setUserData({\r\n                //     userId: enteredEmail,\r\n                //     isLoggedIn\r\n                // }));\r\n                history.push('/dashboard');\r\n            } else {\r\n                return res.json().then(data => {\r\n                    setIsLoading(false);\r\n                    alert(data.error.message);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const onSignUp = () => {\r\n        history.push('/register');\r\n    }\r\n\r\n    return (\r\n        <section className={classes.auth}>\r\n            {!isLoading && <h2 >LOG IN</h2>}\r\n            {!isLoading && <form onSubmit={submitHandler} className={classes.form}>\r\n                <div className={classes.control}>\r\n                    <input type='email' id='email' onChange={onAddEmail} value={enteredEmail} required placeholder=\"Enter Email\" />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <input type={isPasswordHidden ? 'password' : 'text'} id='password' onChange={onAddPass} value={enteredPass} required placeholder=\"Password\" />\r\n                    <button onClick={showHidePassword} style={{alignContent:'start'}}>Show / Hide</button>\r\n                    \r\n                </div>\r\n                <div className={classes.actions}>\r\n                    <button >Submit</button>\r\n                    <button\r\n                        type='button'\r\n                        className={classes.toggle}\r\n                        onClick={onSignUp}>\r\n                        Create new account\r\n                    </button>\r\n                </div>\r\n            </form>}\r\n            {!isLoading && <div className={classes.logo}>\r\n                <button onClick={otherLogin.bind(null, 'Google')}>Google</button>\r\n            </div>}\r\n\r\n            {/* <button onClick={otherLogin.bind(null, 'Facebook')}>Facebook</button> */}\r\n            {isLoading && <LoadingSpinner />}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default LogIn;"]},"metadata":{},"sourceType":"module"}