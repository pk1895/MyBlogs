[{"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\index.js":"1","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\App.js":"2","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\store\\index.js":"3","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\store\\auth-slice.js":"4","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\Pages\\Dashboard\\Dashboard.js":"5","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\Pages\\Authentication\\Register.js":"6","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\Pages\\Authentication\\Login.js":"7","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\components\\Layout\\Navigation.js":"8","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\Pages\\NewPost\\NewPost.js":"9","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\firebase.js":"10","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\components\\UI\\LoadingSpinner.js":"11","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\Pages\\Sections\\Sections.js":"12","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\components\\Post\\Posts.js":"13","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\components\\Post\\PostDetail.js":"14","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\store\\post-slice.js":"15"},{"size":373,"mtime":1622703846556,"results":"16","hashOfConfig":"17"},{"size":1433,"mtime":1622786184137,"results":"18","hashOfConfig":"17"},{"size":259,"mtime":1622787191108,"results":"19","hashOfConfig":"17"},{"size":437,"mtime":1622705874021,"results":"20","hashOfConfig":"17"},{"size":1410,"mtime":1622785675500,"results":"21","hashOfConfig":"17"},{"size":4717,"mtime":1622186115115,"results":"22","hashOfConfig":"17"},{"size":4308,"mtime":1622706537975,"results":"23","hashOfConfig":"17"},{"size":2231,"mtime":1622782597753,"results":"24","hashOfConfig":"17"},{"size":3516,"mtime":1622794906835,"results":"25","hashOfConfig":"17"},{"size":506,"mtime":1622117460865,"results":"26","hashOfConfig":"17"},{"size":227,"mtime":1621444897788,"results":"27","hashOfConfig":"17"},{"size":751,"mtime":1622718786443,"results":"28","hashOfConfig":"17"},{"size":745,"mtime":1622787111006,"results":"29","hashOfConfig":"17"},{"size":2908,"mtime":1622794158922,"results":"30","hashOfConfig":"17"},{"size":730,"mtime":1622793806900,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"7pr0t1",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\index.js",[],["67","68"],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\App.js",[],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\store\\index.js",[],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\store\\auth-slice.js",[],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\Pages\\Dashboard\\Dashboard.js",["69","70"],"import classes from './Dashboard.module.css';\r\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\r\nimport { useEffect, useState } from 'react';\r\nimport Posts from '../../components/Post/Posts';\r\n\r\nconst Dashboard = (props) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [postList, setPostList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setIsLoading(true);\r\n            const response = await fetch('https://dashboardcrud-default-rtdb.firebaseio.com/new-post.json');\r\n            const responseData = await response.json();\r\n            let loadedData = [];\r\n            for (let i in responseData) {\r\n                loadedData.push({\r\n                    id: i,\r\n                    item: responseData[i]\r\n                });\r\n            }\r\n            // console.log(responseData);\r\n            setPostList(loadedData);\r\n            console.log(postList);\r\n        }\r\n        fetchData().catch((error) => {\r\n            alert(error);\r\n        });\r\n        fetchData().finally(() => {\r\n            setIsLoading(false);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {postList.length !== 0 && postList.map((el, ind) => {\r\n                return <Posts id={el.id} item={el.item} />\r\n            })}\r\n            {isLoading && <LoadingSpinner />}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\Pages\\Authentication\\Register.js",["71"],"import classes from './Login.module.css';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport firebase from '../../firebase';\r\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\r\n\r\nconst LogIn = () => {\r\n    const [enteredEmail, setEnteredEmail] = useState('');\r\n    const [enteredPass, setEnteredPass] = useState('');\r\n    const [enteredfName, setEnteredfName] = useState('');\r\n    const [enteredMobile, setEnteredMobile] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const onAddName = (evt) => {\r\n        setEnteredfName(evt.target.value);\r\n    }\r\n\r\n    const onAddMobile = (evt) => {\r\n        setEnteredMobile(evt.target.value);\r\n    }\r\n\r\n    const onAddEmail = (evt) => {\r\n        setEnteredEmail(evt.target.value);\r\n    }\r\n\r\n    const onAddPass = (evt) => {\r\n        setEnteredPass(evt.target.value);\r\n    }\r\n\r\n    const otherLogin = (argProvider) => {\r\n        var provider;\r\n        switch (argProvider) {\r\n            case 'Google':\r\n                provider = new firebase.auth.GoogleAuthProvider();\r\n                break;\r\n        }\r\n\r\n        return firebase.auth().signInWithPopup(provider).then((result) => {\r\n            var credential = result.credential;\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            var token = credential.accessToken;\r\n            console.log(token);\r\n            var user = result.user;\r\n            return user;\r\n\r\n        }).then((res) => {\r\n            alert('Log In successfully!');\r\n            history.push('/dashboard');\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    const submitHandler = (evt) => {\r\n        evt.preventDefault();\r\n        setIsLoading(true);\r\n        fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCEuKukNRynt7pmOA1UybJ2M1jN2iUShzg',\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: enteredEmail,\r\n                    password: enteredPass,\r\n                    returnSecureToken: true\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(res => {\r\n            if (res.ok) {\r\n                setIsLoading(true);\r\n                console.log(res);\r\n                // isLoggedIn = true;\r\n                // dispatch(authActions.setUserData({\r\n                //     userId: enteredEmail,\r\n                //     isLoggedIn\r\n                // }));\r\n                history.push('/login');\r\n            } else {\r\n                return res.json().then(data => {\r\n                    setIsLoading(false);\r\n                    alert(data.error.message);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const onLogIn = () => {\r\n        history.push('/login');\r\n    }\r\n\r\n    return (\r\n        <section className={classes.auth}>\r\n            {!isLoading && <h2 >Sign Up</h2>}\r\n            {!isLoading && <form onSubmit={submitHandler} className={classes.form}>\r\n                <div className={classes.control}>\r\n                    <input type='text' id='fname' onChange={onAddName} value={enteredfName} required placeholder=\"First Name\" />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <input type='number' id='mobile' onChange={onAddMobile} value={enteredMobile} required placeholder=\"Mobile Number\" />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <input type='email' id='email' onChange={onAddEmail} value={enteredEmail} required placeholder=\"Enter Email\" />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <input type='text' id='password' onChange={onAddPass} value={enteredPass} required placeholder=\"Enter Password\" />\r\n                </div>\r\n                <div className={classes.actions}>\r\n                    <button >Submit</button>\r\n                    <button\r\n                        type='button'\r\n                        className={classes.toggle}\r\n                        onClick={onLogIn}>\r\n                        Log In\r\n                    </button>\r\n                </div>\r\n            </form>}\r\n            {!isLoading && <div className={classes.logo}>\r\n                <button onClick={otherLogin.bind(null, 'Google')}>Google</button>\r\n            </div>}\r\n\r\n            {/* <button onClick={otherLogin.bind(null, 'Facebook')}>Facebook</button> */}\r\n            {isLoading && <LoadingSpinner />}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default LogIn;","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\Pages\\Authentication\\Login.js",["72"],"import classes from './Login.module.css';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport firebase from '../../firebase';\r\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\r\nimport { useDispatch } from 'react-redux';\r\nimport {authActions} from '../../store/auth-slice';\r\n\r\nconst LogIn = () => {\r\n    const [enteredEmail, setEnteredEmail] = useState('pn@test.com');\r\n    const [enteredPass, setEnteredPass] = useState('12345678');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const onAddEmail = (evt) => {\r\n        setEnteredEmail(evt.target.value);\r\n    }\r\n\r\n    const onAddPass = (evt) => {\r\n        setEnteredPass(evt.target.value);\r\n    }\r\n\r\n    const otherLogin = (argProvider) => {\r\n        var provider;\r\n        switch (argProvider) {\r\n            case 'Google':\r\n                provider = new firebase.auth.GoogleAuthProvider();\r\n                break;\r\n        }\r\n\r\n        return firebase.auth().signInWithPopup(provider).then((result) => {\r\n            var credential = result.credential;\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            var token = credential.accessToken;\r\n            console.log(token);\r\n            var user = result.user;\r\n            return user;\r\n\r\n        }).then((res) => {\r\n            // alert('Log In successfully!');\r\n            dispatch(authActions.setUserData({\r\n                userId: enteredEmail,\r\n                isLogIn: true\r\n            }));\r\n            history.push('/dashboard');\r\n        }).catch((error) => {\r\n            alert(error);\r\n        });\r\n    }\r\n\r\n    const submitHandler = (evt) => {\r\n        evt.preventDefault();\r\n        setIsLoading(true);\r\n        fetch('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCEuKukNRynt7pmOA1UybJ2M1jN2iUShzg',\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: enteredEmail,\r\n                    password: enteredPass,\r\n                    returnSecureToken: true\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(res => {\r\n            if (res.ok) {\r\n                setIsLoading(false);\r\n                // alert('Log In successfully!');\r\n                dispatch(authActions.setUserData({\r\n                    userId: enteredEmail,\r\n                    isLogIn: true\r\n                }));               \r\n                history.push('/dashboard');\r\n            } else {\r\n                return res.json().then(data => {\r\n                    setIsLoading(false);\r\n                    alert(data.error.message);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const onSignUp = () => {\r\n        history.push('/register');\r\n    }\r\n\r\n    return (\r\n        <section className={classes.auth}>\r\n            {!isLoading && <h2 >LOG IN</h2>}\r\n            {!isLoading && <form onSubmit={submitHandler} className={classes.form}>\r\n                <div className={classes.control}>\r\n                    <input type='email' id='email' onChange={onAddEmail} value={enteredEmail} required placeholder=\"Enter Email\" />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <input type='password' id='password' onChange={onAddPass} value={enteredPass} required placeholder=\"Enter Password\" />\r\n                </div>\r\n                <div className={classes.actions}>\r\n                    <button >Submit</button>\r\n                    <button\r\n                        type='button'\r\n                        className={classes.toggle}\r\n                        onClick={onSignUp}>\r\n                        Create new account\r\n                    </button>\r\n                </div>\r\n            </form>}\r\n            {!isLoading && <div className={classes.logo}>\r\n                <button onClick={otherLogin.bind(null, 'Google')}>Google</button>\r\n            </div>}\r\n\r\n            {/* <button onClick={otherLogin.bind(null, 'Facebook')}>Facebook</button> */}\r\n            {isLoading && <LoadingSpinner />}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default LogIn;","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\components\\Layout\\Navigation.js",["73","74","75","76","77","78","79"],"import classes from './Navigation.module.css';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n// import { useSelector, useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\n// import { authActions } from '../../store/auth-slice';\r\n\r\nconst MainHeader = (props) => {\r\n  const history = useHistory();\r\n//   const dispatch = useDispatch();\r\n  const isLoggedIn = true;\r\n\r\n  const [isLogout, setIsLogout] = useState(false);\r\n  const [cartDropdown, setCartDropdown] = useState(false);\r\n  const [isCheckout, setIsCheckout] = useState(false);\r\n\r\n  const onHome = () => {\r\n    history.push('/dashboard');\r\n  }\r\n\r\n  const onConfirmHandler = () => {\r\n    setIsLogout(false);\r\n    // localStorage.removeItem('token');\r\n    // dispatch(authActions.setUserData({\r\n    //   userId: '',\r\n    //   isLoggedIn: false\r\n    // }));\r\n    // history.push('/login');\r\n  }\r\n\r\n  const onCancelHandler = () => {\r\n    setIsLogout(false);\r\n  }\r\n\r\n  const onLogOut = () => {\r\n    setIsLogout(true);\r\n  }\r\n\r\n  const onCartDropDown = () => {\r\n    setCartDropdown(!cartDropdown);\r\n  }\r\n\r\n  const onCheckout = () => {\r\n    setCartDropdown(false);\r\n    setIsCheckout(true);\r\n  }\r\n\r\n  const onCancelCheckout = () => {\r\n    setIsCheckout(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <header className={classes.header}>\r\n        <div className={classes.logo} onClick={onHome}>My Blogs</div>\r\n        <nav className={classes.nav}>\r\n          <ul>\r\n            <li>\r\n              {isLoggedIn && <Link to='/new-post'>New Post</Link>}\r\n            </li>\r\n            <li>\r\n              {isLoggedIn && <Link to='/sections'>Sections</Link>}\r\n            </li>\r\n            {isLoggedIn && <li>\r\n              <button className={classes.logoutbutton} onClick={onLogOut} >Log Out</button>\r\n            </li>}\r\n            {/* {isLoggedIn && <HeaderCartButton onHandle={onCartDropDown} />} */}\r\n          </ul>\r\n          {/* {isLogout && <Logout onCancel={onCancelHandler} onConfirm={onConfirmHandler} />}\r\n          {isLoggedIn && cartDropdown && <CartDropdown onGoToCheckout={onCheckout} />}\r\n          {isCheckout && <Checkout onCancel={onCancelCheckout} />} */}\r\n        </nav>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainHeader;\r\n","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\Pages\\NewPost\\NewPost.js",[],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\firebase.js",[],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\components\\UI\\LoadingSpinner.js",[],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\Pages\\Sections\\Sections.js",[],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\components\\Post\\Posts.js",[],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\components\\Post\\PostDetail.js",[],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\store\\post-slice.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":8,"nodeType":"86","messageId":"87","endLine":1,"endColumn":15},{"ruleId":"88","severity":1,"message":"89","line":32,"column":8,"nodeType":"90","endLine":32,"endColumn":10,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":33,"column":9,"nodeType":"94","messageId":"95","endLine":37,"endColumn":10},{"ruleId":"92","severity":1,"message":"93","line":26,"column":9,"nodeType":"94","messageId":"95","endLine":30,"endColumn":10},{"ruleId":"84","severity":1,"message":"96","line":12,"column":10,"nodeType":"86","messageId":"87","endLine":12,"endColumn":18},{"ruleId":"84","severity":1,"message":"97","line":14,"column":10,"nodeType":"86","messageId":"87","endLine":14,"endColumn":20},{"ruleId":"84","severity":1,"message":"98","line":20,"column":9,"nodeType":"86","messageId":"87","endLine":20,"endColumn":25},{"ruleId":"84","severity":1,"message":"99","line":30,"column":9,"nodeType":"86","messageId":"87","endLine":30,"endColumn":24},{"ruleId":"84","severity":1,"message":"100","line":38,"column":9,"nodeType":"86","messageId":"87","endLine":38,"endColumn":23},{"ruleId":"84","severity":1,"message":"101","line":42,"column":9,"nodeType":"86","messageId":"87","endLine":42,"endColumn":19},{"ruleId":"84","severity":1,"message":"102","line":47,"column":9,"nodeType":"86","messageId":"87","endLine":47,"endColumn":25},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'classes' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postList'. Either include it or remove the dependency array.","ArrayExpression",["105"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'isLogout' is assigned a value but never used.","'isCheckout' is assigned a value but never used.","'onConfirmHandler' is assigned a value but never used.","'onCancelHandler' is assigned a value but never used.","'onCartDropDown' is assigned a value but never used.","'onCheckout' is assigned a value but never used.","'onCancelCheckout' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Update the dependencies array to be: [postList]",{"range":"108","text":"109"},[1134,1136],"[postList]"]