{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst PostsSlice = createSlice({\n  name: 'Posts',\n  initialState: {\n    items: [],\n    postDetailItem: {\n      id: '',\n      title: '',\n      section: '',\n      content: ''\n    }\n  },\n  reducers: {\n    setPostData(state, action) {\n      const existingItem = state.items.find(el => el.id === action.payload.id);\n\n      if (!existingItem) {\n        state.items.push({\n          id: action.payload.id,\n          title: action.payload.item.title,\n          content: action.payload.item.content,\n          section: action.payload.item.section\n        });\n      }\n    },\n\n    setPost(state, action) {\n      const postDetailItem = state.items.filter(el => el.id === action.payload.id);\n      state.postDetailItem = postDetailItem;\n    },\n\n    clearPost(state, action) {\n      state.items = [];\n      state.postDetailItem = {};\n    }\n\n  }\n});\nexport const PostsAction = PostsSlice.actions;\nexport default PostsSlice;","map":{"version":3,"sources":["F:/Prasad/DEV/myProjects/MyBlogs/src/store/posts-slice.js"],"names":["createSlice","PostsSlice","name","initialState","items","postDetailItem","id","title","section","content","reducers","setPostData","state","action","existingItem","find","el","payload","push","item","setPost","filter","clearPost","PostsAction","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,UAAU,GAAGD,WAAW,CAAC;AAC3BE,EAAAA,IAAI,EAAE,OADqB;AAE3BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,KAAK,EAAE,EADG;AAEVC,IAAAA,cAAc,EAAE;AACZC,MAAAA,EAAE,EAAE,EADQ;AAEZC,MAAAA,KAAK,EAAE,EAFK;AAGZC,MAAAA,OAAO,EAAE,EAHG;AAIZC,MAAAA,OAAO,EAAE;AAJG;AAFN,GAFa;AAW3BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACvB,YAAMC,YAAY,GAAGF,KAAK,CAACR,KAAN,CAAYW,IAAZ,CAAkBC,EAAD,IAAQA,EAAE,CAACV,EAAH,KAAUO,MAAM,CAACI,OAAP,CAAeX,EAAlD,CAArB;;AACA,UAAI,CAACQ,YAAL,EAAmB;AACfF,QAAAA,KAAK,CAACR,KAAN,CAAYc,IAAZ,CAAiB;AACbZ,UAAAA,EAAE,EAAEO,MAAM,CAACI,OAAP,CAAeX,EADN;AAEbC,UAAAA,KAAK,EAAEM,MAAM,CAACI,OAAP,CAAeE,IAAf,CAAoBZ,KAFd;AAGbE,UAAAA,OAAO,EAAEI,MAAM,CAACI,OAAP,CAAeE,IAAf,CAAoBV,OAHhB;AAIbD,UAAAA,OAAO,EAAEK,MAAM,CAACI,OAAP,CAAeE,IAAf,CAAoBX;AAJhB,SAAjB;AAMH;AACJ,KAXK;;AAaNY,IAAAA,OAAO,CAACR,KAAD,EAAQC,MAAR,EAAgB;AACnB,YAAMR,cAAc,GAAGO,KAAK,CAACR,KAAN,CAAYiB,MAAZ,CAAmBL,EAAE,IAAIA,EAAE,CAACV,EAAH,KAAUO,MAAM,CAACI,OAAP,CAAeX,EAAlD,CAAvB;AACAM,MAAAA,KAAK,CAACP,cAAN,GAAuBA,cAAvB;AACH,KAhBK;;AAkBNiB,IAAAA,SAAS,CAACV,KAAD,EAAQC,MAAR,EAAgB;AACrBD,MAAAA,KAAK,CAACR,KAAN,GAAc,EAAd;AACAQ,MAAAA,KAAK,CAACP,cAAN,GAAuB,EAAvB;AACH;;AArBK;AAXiB,CAAD,CAA9B;AAoCA,OAAO,MAAMkB,WAAW,GAAGtB,UAAU,CAACuB,OAA/B;AACP,eAAevB,UAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst PostsSlice = createSlice({\r\n    name: 'Posts',\r\n    initialState: {\r\n        items: [],\r\n        postDetailItem: {\r\n            id: '',\r\n            title: '',\r\n            section: '',\r\n            content: ''\r\n        }\r\n    },\r\n    reducers: {\r\n        setPostData(state, action) {\r\n            const existingItem = state.items.find((el) => el.id === action.payload.id);\r\n            if (!existingItem) {\r\n                state.items.push({\r\n                    id: action.payload.id,\r\n                    title: action.payload.item.title,\r\n                    content: action.payload.item.content,\r\n                    section: action.payload.item.section\r\n                });\r\n            }\r\n        },\r\n\r\n        setPost(state, action) {\r\n            const postDetailItem = state.items.filter(el => el.id === action.payload.id);\r\n            state.postDetailItem = postDetailItem;\r\n        },\r\n\r\n        clearPost(state, action) {\r\n            state.items = [];\r\n            state.postDetailItem = {};\r\n        }\r\n    }\r\n});\r\n\r\nexport const PostsAction = PostsSlice.actions;\r\nexport default PostsSlice;"]},"metadata":{},"sourceType":"module"}