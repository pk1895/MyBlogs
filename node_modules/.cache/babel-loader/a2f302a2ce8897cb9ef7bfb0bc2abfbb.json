{"ast":null,"code":"var _jsxFileName = \"F:\\\\Prasad\\\\DEV\\\\myProjects\\\\dashboardCRUD\\\\src\\\\Pages\\\\Authentication\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport classes from './Login.module.css';\nimport { useState } from 'react';\nimport firebase from '../../firebase';\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LogIn = () => {\n  _s();\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredPass, setEnteredPass] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n\n  const onAddEmail = evt => {\n    setEnteredEmail(evt.target.value);\n  };\n\n  const onAddPass = evt => {\n    setEnteredPass(evt.target.value);\n  };\n\n  const otherLogin = argProvider => {\n    var provider;\n\n    switch (argProvider) {\n      case 'Google':\n        provider = new firebase.auth.GoogleAuthProvider();\n        break;\n    }\n\n    return firebase.auth().signInWithPopup(provider).then(result => {\n      var credential = result.credential; // This gives you a Google Access Token. You can use it to access the Google API.\n\n      var token = credential.accessToken;\n      console.log(token);\n      var user = result.user;\n      return user;\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const submitHandler = evt => {\n    evt.preventDefault();\n    setIsLoading(true);\n    fetch('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCEuKukNRynt7pmOA1UybJ2M1jN2iUShzg', {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPass,\n        returnSecureToken: true\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.ok) {\n        setIsLoading(true);\n        console.log(res);\n        isLoggedIn = true; // dispatch(authActions.setUserData({\n        //     userId: enteredEmail,\n        //     isLoggedIn\n        // }));\n\n        history.push('/home');\n      } else {\n        return res.json().then(data => {\n          setIsLoading(false);\n          alert(data.error.message);\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [!isLoading && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LOG IN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 28\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"recaptcha-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          onChange: onAddEmail,\n          value: enteredEmail,\n          required: true,\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          onChange: onAddPass,\n          value: enteredPass,\n          required: true,\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 28\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.logo,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: otherLogin.bind(null, 'Google'),\n        children: \"Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 28\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LogIn, \"tP6a9CXHJP1obZ9hr1858Slds+M=\", true);\n\n_c = LogIn;\nexport default LogIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"sources":["F:/Prasad/DEV/myProjects/dashboardCRUD/src/Pages/Authentication/Login.js"],"names":["classes","useState","firebase","LoadingSpinner","LogIn","enteredEmail","setEnteredEmail","enteredPass","setEnteredPass","isLoading","setIsLoading","history","useHistory","onAddEmail","evt","target","value","onAddPass","otherLogin","argProvider","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","credential","token","accessToken","console","log","user","catch","error","submitHandler","preventDefault","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","res","ok","isLoggedIn","push","json","data","alert","message","control","actions","logo","bind"],"mappings":"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","sourcesContent":["import classes from './Login.module.css';\r\nimport { useState } from 'react';\r\nimport firebase from '../../firebase';\r\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\r\n\r\nconst LogIn = () => {\r\n    const [enteredEmail, setEnteredEmail] = useState('');\r\n    const [enteredPass, setEnteredPass] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const onAddEmail = (evt) => {\r\n        setEnteredEmail(evt.target.value);\r\n    }\r\n\r\n    const onAddPass = (evt) => {\r\n        setEnteredPass(evt.target.value);\r\n    }\r\n\r\n    const otherLogin = (argProvider) => {\r\n        var provider;\r\n\r\n        switch (argProvider) {\r\n            case 'Google':\r\n                provider = new firebase.auth.GoogleAuthProvider();\r\n                break;\r\n        }\r\n\r\n        return firebase.auth().signInWithPopup(provider).then((result) => {\r\n            var credential = result.credential;\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            var token = credential.accessToken;\r\n            console.log(token);\r\n            var user = result.user;\r\n            return user;\r\n\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    const submitHandler = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        setIsLoading(true);\r\n        fetch('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCEuKukNRynt7pmOA1UybJ2M1jN2iUShzg',\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: enteredEmail,\r\n                    password: enteredPass,\r\n                    returnSecureToken: true\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(res => {\r\n            if (res.ok) {\r\n                setIsLoading(true);\r\n                console.log(res);\r\n                isLoggedIn = true;\r\n                // dispatch(authActions.setUserData({\r\n                //     userId: enteredEmail,\r\n                //     isLoggedIn\r\n                // }));\r\n                history.push('/home');\r\n            } else {\r\n                return res.json().then(data => {\r\n                    setIsLoading(false);\r\n                    alert(data.error.message);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <section className={classes.auth}>\r\n            {!isLoading && <h1 >LOG IN</h1>}\r\n            {!isLoading && <form onSubmit={submitHandler}>\r\n                <div id=\"recaptcha-container\" />\r\n                <div className={classes.control}>\r\n                    <input type='email' id='email' onChange={onAddEmail} value={enteredEmail} required placeholder=\"Email\" />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <input type='password' id='password' onChange={onAddPass} value={enteredPass} required placeholder=\"Password\" />\r\n                </div>\r\n                <div className={classes.actions}>\r\n                    <button >Login</button>\r\n                </div>\r\n            </form>}\r\n            {!isLoading && <div className={classes.logo}>\r\n                <button onClick={otherLogin.bind(null, 'Google')}>Google</button>\r\n            </div>}\r\n\r\n            {/* <button onClick={otherLogin.bind(null, 'Facebook')}>Facebook</button> */}\r\n            {isLoading && <LoadingSpinner />}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default LogIn;"]},"metadata":{},"sourceType":"module"}