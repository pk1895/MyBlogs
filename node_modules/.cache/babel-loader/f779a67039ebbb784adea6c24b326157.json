{"ast":null,"code":"var _jsxFileName = \"F:\\\\Prasad\\\\DEV\\\\myProjects\\\\MyBlogs\\\\src\\\\components\\\\Post\\\\PostDetail.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./PostDetail.module.css\";\nimport { useSelector } from \"react-redux\";\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostDetail = () => {\n  _s();\n\n  const {\n    id,\n    title,\n    section,\n    content\n  } = useSelector(state => state.post);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onAddTitle = () => {};\n\n  const onAddContent = () => {};\n\n  const onSubmit = () => {\n    evt.preventDefault();\n    setIsLoading(true);\n    fetch('https://dashboardcrud-default-rtdb.firebaseio.com/new-post.json', {\n      method: 'POST',\n      body: JSON.stringify(payload),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      // console.log(response.data);\n      setIsLoading(false);\n      setTitle('');\n      setSection(\"Technology\");\n      setContent('');\n      setTimeout(() => {\n        alert('Post created successfully!');\n      }, 300);\n    }).catch(error => {\n      setIsLoading(false);\n      alert(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.header,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.title,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"title\",\n            onChange: onAddTitle,\n            value: title,\n            autoComplete: \"off\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.title,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"section\",\n            value: section,\n            disabled: \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"content\",\n          onChange: onAddContent,\n          value: content,\n          placeholder: \"Content\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(PostDetail, \"/fJdSW2Wzxn0pxWdXFPlXkYqoJ4=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostDetail;\nexport default PostDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["F:/Prasad/DEV/myProjects/MyBlogs/src/components/Post/PostDetail.js"],"names":["classes","useSelector","LoadingSpinner","PostDetail","id","title","section","content","state","post","isLoading","setIsLoading","useState","onAddTitle","onAddContent","onSubmit","evt","preventDefault","fetch","method","body","JSON","stringify","payload","headers","then","response","setTitle","setSection","setContent","setTimeout","alert","catch","error","form","header","actions"],"mappings":"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","sourcesContent":["import classes from \"./PostDetail.module.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\r\n\r\nconst PostDetail = () => {\r\n\r\n    const { id, title, section, content } = useSelector((state) => state.post);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const onAddTitle = () => { }\r\n    const onAddContent = () => { }\r\n    const onSubmit = () => {\r\n\r\n        evt.preventDefault();\r\n        setIsLoading(true);\r\n\r\n        fetch('https://dashboardcrud-default-rtdb.firebaseio.com/new-post.json', {\r\n            method: 'POST',\r\n            body: JSON.stringify(payload),\r\n            headers: { 'Content-Type': 'application/json' }\r\n\r\n        }).then((response) => {\r\n            // console.log(response.data);\r\n            setIsLoading(false);\r\n            setTitle('');\r\n            setSection(\"Technology\");\r\n            setContent('');\r\n\r\n            setTimeout(() => {\r\n                alert('Post created successfully!');\r\n            }, 300);\r\n\r\n        }).catch((error) => {\r\n            setIsLoading(false);\r\n            alert(error);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className={classes.form}>\r\n                <div className={classes.header}>\r\n                    <div className={classes.title}>\r\n                        <input\r\n                            id='title'\r\n                            onChange={onAddTitle}\r\n                            value={title}\r\n                            autoComplete=\"off\"\r\n                            required />\r\n                    </div>\r\n                    <div className={classes.title}>\r\n                        <input\r\n                            id='section'\r\n                            value={section}\r\n                            disabled=\"true\" />\r\n                    </div>\r\n                </div>\r\n                <div className={classes.content}>\r\n                    <textarea\r\n                        id='content'\r\n                        onChange={onAddContent}\r\n                        value={content}\r\n                        placeholder=\"Content\"\r\n                        required />\r\n                </div>\r\n                <div className={classes.actions}>\r\n                    <button >Submit</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PostDetail;"]},"metadata":{},"sourceType":"module"}