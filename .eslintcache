[{"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\index.js":"1","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\App.js":"2","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\store\\index.js":"3","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\store\\auth-slice.js":"4","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\Pages\\Dashboard\\Dashboard.js":"5","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\Pages\\Authentication\\Register.js":"6","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\Pages\\Authentication\\Login.js":"7","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\components\\Layout\\Navigation.js":"8","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\Pages\\NewPost\\NewPost.js":"9","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\firebase.js":"10","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\components\\UI\\LoadingSpinner.js":"11","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\Pages\\Sections\\Sections.js":"12","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\components\\Post\\Posts.js":"13","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\components\\Post\\PostDetail.js":"14","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\store\\post-slice.js":"15","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\Pages\\Subsection\\Subsection.js":"16","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\components\\Post\\PostRead.js":"17","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\store\\posts-slice.js":"18"},{"size":373,"mtime":1622703846556,"results":"19","hashOfConfig":"20"},{"size":1782,"mtime":1622804160901,"results":"21","hashOfConfig":"20"},{"size":327,"mtime":1622891669964,"results":"22","hashOfConfig":"20"},{"size":437,"mtime":1622705874021,"results":"23","hashOfConfig":"20"},{"size":1844,"mtime":1622895473057,"results":"24","hashOfConfig":"20"},{"size":4717,"mtime":1622186115115,"results":"25","hashOfConfig":"20"},{"size":4308,"mtime":1622706537975,"results":"26","hashOfConfig":"20"},{"size":2165,"mtime":1622914543222,"results":"27","hashOfConfig":"20"},{"size":3516,"mtime":1622794906835,"results":"28","hashOfConfig":"20"},{"size":506,"mtime":1622117460865,"results":"29","hashOfConfig":"20"},{"size":227,"mtime":1621444897788,"results":"30","hashOfConfig":"20"},{"size":1199,"mtime":1622897102769,"results":"31","hashOfConfig":"20"},{"size":1099,"mtime":1622895531241,"results":"32","hashOfConfig":"20"},{"size":2925,"mtime":1622896254084,"results":"33","hashOfConfig":"20"},{"size":730,"mtime":1622793806900,"results":"34","hashOfConfig":"20"},{"size":1092,"mtime":1622899272118,"results":"35","hashOfConfig":"20"},{"size":580,"mtime":1622895863313,"results":"36","hashOfConfig":"20"},{"size":1167,"mtime":1622895373506,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"7pr0t1",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\index.js",[],["77","78"],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\App.js",[],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\store\\index.js",[],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\store\\auth-slice.js",[],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\Pages\\Dashboard\\Dashboard.js",["79","80"],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\Pages\\Authentication\\Register.js",["81"],"import classes from './Login.module.css';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport firebase from '../../firebase';\r\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\r\n\r\nconst LogIn = () => {\r\n    const [enteredEmail, setEnteredEmail] = useState('');\r\n    const [enteredPass, setEnteredPass] = useState('');\r\n    const [enteredfName, setEnteredfName] = useState('');\r\n    const [enteredMobile, setEnteredMobile] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const onAddName = (evt) => {\r\n        setEnteredfName(evt.target.value);\r\n    }\r\n\r\n    const onAddMobile = (evt) => {\r\n        setEnteredMobile(evt.target.value);\r\n    }\r\n\r\n    const onAddEmail = (evt) => {\r\n        setEnteredEmail(evt.target.value);\r\n    }\r\n\r\n    const onAddPass = (evt) => {\r\n        setEnteredPass(evt.target.value);\r\n    }\r\n\r\n    const otherLogin = (argProvider) => {\r\n        var provider;\r\n        switch (argProvider) {\r\n            case 'Google':\r\n                provider = new firebase.auth.GoogleAuthProvider();\r\n                break;\r\n        }\r\n\r\n        return firebase.auth().signInWithPopup(provider).then((result) => {\r\n            var credential = result.credential;\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            var token = credential.accessToken;\r\n            console.log(token);\r\n            var user = result.user;\r\n            return user;\r\n\r\n        }).then((res) => {\r\n            alert('Log In successfully!');\r\n            history.push('/dashboard');\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    const submitHandler = (evt) => {\r\n        evt.preventDefault();\r\n        setIsLoading(true);\r\n        fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCEuKukNRynt7pmOA1UybJ2M1jN2iUShzg',\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: enteredEmail,\r\n                    password: enteredPass,\r\n                    returnSecureToken: true\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(res => {\r\n            if (res.ok) {\r\n                setIsLoading(true);\r\n                console.log(res);\r\n                // isLoggedIn = true;\r\n                // dispatch(authActions.setUserData({\r\n                //     userId: enteredEmail,\r\n                //     isLoggedIn\r\n                // }));\r\n                history.push('/login');\r\n            } else {\r\n                return res.json().then(data => {\r\n                    setIsLoading(false);\r\n                    alert(data.error.message);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const onLogIn = () => {\r\n        history.push('/login');\r\n    }\r\n\r\n    return (\r\n        <section className={classes.auth}>\r\n            {!isLoading && <h2 >Sign Up</h2>}\r\n            {!isLoading && <form onSubmit={submitHandler} className={classes.form}>\r\n                <div className={classes.control}>\r\n                    <input type='text' id='fname' onChange={onAddName} value={enteredfName} required placeholder=\"First Name\" />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <input type='number' id='mobile' onChange={onAddMobile} value={enteredMobile} required placeholder=\"Mobile Number\" />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <input type='email' id='email' onChange={onAddEmail} value={enteredEmail} required placeholder=\"Enter Email\" />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <input type='text' id='password' onChange={onAddPass} value={enteredPass} required placeholder=\"Enter Password\" />\r\n                </div>\r\n                <div className={classes.actions}>\r\n                    <button >Submit</button>\r\n                    <button\r\n                        type='button'\r\n                        className={classes.toggle}\r\n                        onClick={onLogIn}>\r\n                        Log In\r\n                    </button>\r\n                </div>\r\n            </form>}\r\n            {!isLoading && <div className={classes.logo}>\r\n                <button onClick={otherLogin.bind(null, 'Google')}>Google</button>\r\n            </div>}\r\n\r\n            {/* <button onClick={otherLogin.bind(null, 'Facebook')}>Facebook</button> */}\r\n            {isLoading && <LoadingSpinner />}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default LogIn;","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\Pages\\Authentication\\Login.js",["82"],"import classes from './Login.module.css';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport firebase from '../../firebase';\r\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\r\nimport { useDispatch } from 'react-redux';\r\nimport {authActions} from '../../store/auth-slice';\r\n\r\nconst LogIn = () => {\r\n    const [enteredEmail, setEnteredEmail] = useState('pn@test.com');\r\n    const [enteredPass, setEnteredPass] = useState('12345678');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const onAddEmail = (evt) => {\r\n        setEnteredEmail(evt.target.value);\r\n    }\r\n\r\n    const onAddPass = (evt) => {\r\n        setEnteredPass(evt.target.value);\r\n    }\r\n\r\n    const otherLogin = (argProvider) => {\r\n        var provider;\r\n        switch (argProvider) {\r\n            case 'Google':\r\n                provider = new firebase.auth.GoogleAuthProvider();\r\n                break;\r\n        }\r\n\r\n        return firebase.auth().signInWithPopup(provider).then((result) => {\r\n            var credential = result.credential;\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            var token = credential.accessToken;\r\n            console.log(token);\r\n            var user = result.user;\r\n            return user;\r\n\r\n        }).then((res) => {\r\n            // alert('Log In successfully!');\r\n            dispatch(authActions.setUserData({\r\n                userId: enteredEmail,\r\n                isLogIn: true\r\n            }));\r\n            history.push('/dashboard');\r\n        }).catch((error) => {\r\n            alert(error);\r\n        });\r\n    }\r\n\r\n    const submitHandler = (evt) => {\r\n        evt.preventDefault();\r\n        setIsLoading(true);\r\n        fetch('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCEuKukNRynt7pmOA1UybJ2M1jN2iUShzg',\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: enteredEmail,\r\n                    password: enteredPass,\r\n                    returnSecureToken: true\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(res => {\r\n            if (res.ok) {\r\n                setIsLoading(false);\r\n                // alert('Log In successfully!');\r\n                dispatch(authActions.setUserData({\r\n                    userId: enteredEmail,\r\n                    isLogIn: true\r\n                }));               \r\n                history.push('/dashboard');\r\n            } else {\r\n                return res.json().then(data => {\r\n                    setIsLoading(false);\r\n                    alert(data.error.message);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const onSignUp = () => {\r\n        history.push('/register');\r\n    }\r\n\r\n    return (\r\n        <section className={classes.auth}>\r\n            {!isLoading && <h2 >LOG IN</h2>}\r\n            {!isLoading && <form onSubmit={submitHandler} className={classes.form}>\r\n                <div className={classes.control}>\r\n                    <input type='email' id='email' onChange={onAddEmail} value={enteredEmail} required placeholder=\"Enter Email\" />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <input type='password' id='password' onChange={onAddPass} value={enteredPass} required placeholder=\"Enter Password\" />\r\n                </div>\r\n                <div className={classes.actions}>\r\n                    <button >Submit</button>\r\n                    <button\r\n                        type='button'\r\n                        className={classes.toggle}\r\n                        onClick={onSignUp}>\r\n                        Create new account\r\n                    </button>\r\n                </div>\r\n            </form>}\r\n            {!isLoading && <div className={classes.logo}>\r\n                <button onClick={otherLogin.bind(null, 'Google')}>Google</button>\r\n            </div>}\r\n\r\n            {/* <button onClick={otherLogin.bind(null, 'Facebook')}>Facebook</button> */}\r\n            {isLoading && <LoadingSpinner />}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default LogIn;","F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\components\\Layout\\Navigation.js",[],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\Pages\\NewPost\\NewPost.js",[],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\firebase.js",[],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\components\\UI\\LoadingSpinner.js",[],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\Pages\\Sections\\Sections.js",[],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\components\\Post\\Posts.js",[],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\components\\Post\\PostDetail.js",[],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\store\\post-slice.js",[],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\Pages\\Subsection\\Subsection.js",[],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\components\\Post\\PostRead.js",["83"],"F:\\Prasad\\DEV\\myProjects\\MyBlogs\\src\\store\\posts-slice.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":10,"column":12,"nodeType":"90","messageId":"91","endLine":10,"endColumn":20},{"ruleId":"92","severity":1,"message":"93","line":38,"column":8,"nodeType":"94","endLine":38,"endColumn":10,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":33,"column":9,"nodeType":"98","messageId":"99","endLine":37,"endColumn":10},{"ruleId":"96","severity":1,"message":"97","line":26,"column":9,"nodeType":"98","messageId":"99","endLine":30,"endColumn":10},{"ruleId":"88","severity":1,"message":"100","line":6,"column":20,"nodeType":"90","messageId":"91","endLine":6,"endColumn":27},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'postList' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["103"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'section' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},"Update the dependencies array to be: [dispatch]",{"range":"106","text":"107"},[1410,1412],"[dispatch]"]