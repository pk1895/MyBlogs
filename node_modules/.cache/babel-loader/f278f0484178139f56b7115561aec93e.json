{"ast":null,"code":"var _jsxFileName = \"F:\\\\Prasad\\\\DEV\\\\myProjects\\\\dashboardCRUD\\\\src\\\\Pages\\\\Authentication\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport classes from './Login.module.css';\nimport { useState } from 'react';\nimport firebase from 'firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LogIn = () => {\n  _s();\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n\n  setUpRecaptcha = () => {\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container', {\n      'size': 'invisible',\n      'callback': response => {\n        // reCAPTCHA solved, allow signInWithPhoneNumber.\n        this.submitHandler();\n      }\n    });\n  };\n\n  const onAddEmail = evt => {\n    setEnteredEmail(evt.target.value);\n    console.log(evt.target.value);\n  };\n\n  const submitHandler = evt => {\n    evt.preventDefault();\n    this.setUpRecaptcha();\n    const phoneNumber = enteredEmail;\n    const appVerifier = window.recaptchaVerifier;\n    firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier).then(confirmationResult => {\n      // SMS sent. Prompt user to type the code from the message, then sign the\n      // user in with confirmationResult.confirm(code).\n      window.confirmationResult = confirmationResult; // ...\n    }).catch(error => {// Error; SMS not sent\n      // ...\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LOG IN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"phone\",\n          onChange: onAddEmail,\n          value: enteredEmail,\n          required: true,\n          placeholder: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LogIn, \"eudy0TZ03yTe/LfB3FXfkvEZ/3k=\");\n\n_c = LogIn;\nexport default LogIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"sources":["F:/Prasad/DEV/myProjects/dashboardCRUD/src/Pages/Authentication/Login.js"],"names":["classes","useState","firebase","LogIn","enteredEmail","setEnteredEmail","setUpRecaptcha","window","recaptchaVerifier","auth","RecaptchaVerifier","response","submitHandler","onAddEmail","evt","target","value","console","log","preventDefault","phoneNumber","appVerifier","signInWithPhoneNumber","then","confirmationResult","catch","error","control","actions"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,UAArB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;;AAEAK,EAAAA,cAAc,GAAG,MAAM;AACnBC,IAAAA,MAAM,CAACC,iBAAP,GAA2B,IAAIN,QAAQ,CAACO,IAAT,CAAcC,iBAAlB,CACvB,qBADuB,EACA;AACvB,cAAQ,WADe;AAEvB,kBAAaC,QAAD,IAAc;AACtB;AACA,aAAKC,aAAL;AACH;AALsB,KADA,CAA3B;AAQH,GATD;;AAWA,QAAMC,UAAU,GAAIC,GAAD,IAAS;AACxBT,IAAAA,eAAe,CAACS,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACC,MAAJ,CAAWC,KAAvB;AACH,GAHD;;AAKA,QAAMJ,aAAa,GAAIE,GAAD,IAAS;AAC3BA,IAAAA,GAAG,CAACK,cAAJ;AACA,SAAKb,cAAL;AACA,UAAMc,WAAW,GAAGhB,YAApB;AACA,UAAMiB,WAAW,GAAGd,MAAM,CAACC,iBAA3B;AACAN,IAAAA,QAAQ,CAACO,IAAT,GAAgBa,qBAAhB,CAAsCF,WAAtC,EAAmDC,WAAnD,EACKE,IADL,CACWC,kBAAD,IAAwB;AAC1B;AACA;AACAjB,MAAAA,MAAM,CAACiB,kBAAP,GAA4BA,kBAA5B,CAH0B,CAI1B;AACH,KANL,EAMOC,KANP,CAMcC,KAAD,IAAW,CAChB;AACA;AACH,KATL;AAUH,GAfD;;AAiBA,sBACI;AAAS,IAAA,SAAS,EAAE1B,OAAO,CAACS,IAA5B;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEG,aAAhB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEZ,OAAO,CAAC2B,OAAxB;AAAA,+BACI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,EAAE,EAAC,OAAxB;AAAgC,UAAA,QAAQ,EAAEd,UAA1C;AAAsD,UAAA,KAAK,EAAET,YAA7D;AAA2E,UAAA,QAAQ,MAAnF;AAAoF,UAAA,WAAW,EAAC;AAAhG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAEJ,OAAO,CAAC4B,OAAxB;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CArDD;;GAAMzB,K;;KAAAA,K;AAuDN,eAAeA,KAAf","sourcesContent":["import classes from './Login.module.css';\r\nimport { useState } from 'react';\r\nimport firebase from 'firebase';\r\n\r\nconst LogIn = () => {\r\n    const [enteredEmail, setEnteredEmail] = useState('');\r\n\r\n    setUpRecaptcha = () => {\r\n        window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\r\n            'recaptcha-container', {\r\n            'size': 'invisible',\r\n            'callback': (response) => {\r\n                // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n                this.submitHandler();\r\n            }\r\n        });\r\n    }\r\n\r\n    const onAddEmail = (evt) => {\r\n        setEnteredEmail(evt.target.value);\r\n        console.log(evt.target.value);\r\n    }\r\n\r\n    const submitHandler = (evt) => {\r\n        evt.preventDefault();\r\n        this.setUpRecaptcha();\r\n        const phoneNumber = enteredEmail;\r\n        const appVerifier = window.recaptchaVerifier;\r\n        firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier)\r\n            .then((confirmationResult) => {\r\n                // SMS sent. Prompt user to type the code from the message, then sign the\r\n                // user in with confirmationResult.confirm(code).\r\n                window.confirmationResult = confirmationResult;\r\n                // ...\r\n            }).catch((error) => {\r\n                // Error; SMS not sent\r\n                // ...\r\n            });\r\n    }\r\n\r\n    return (\r\n        <section className={classes.auth}>\r\n            <h1 >LOG IN</h1>\r\n            <form onSubmit={submitHandler}>\r\n                <div className={classes.control}>\r\n                    <input type='number' id='phone' onChange={onAddEmail} value={enteredEmail} required placeholder=\"Phone Number\" />\r\n                </div>\r\n                {/* <div className={classes.control}>\r\n                        <input type='password' id='password' onChange={onAddPass} value={enteredPass} required placeholder=\"Password\" />\r\n                    </div> */}\r\n                <div className={classes.actions}>\r\n                    <button >Login</button>\r\n                </div>\r\n            </form>\r\n            {/* {isLoading && <LoadingSpinner />} */}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default LogIn;"]},"metadata":{},"sourceType":"module"}