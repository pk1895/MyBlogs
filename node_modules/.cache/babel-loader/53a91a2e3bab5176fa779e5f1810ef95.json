{"ast":null,"code":"var _jsxFileName = \"F:\\\\Prasad\\\\DEV\\\\myProjects\\\\MyBlogs\\\\src\\\\components\\\\Post\\\\PostDetail.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./PostDetail.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\nimport axios from 'axios';\nimport { PostActions } from '../../store/post-slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostDetail = () => {\n  _s();\n\n  const {\n    id,\n    title,\n    section,\n    content\n  } = useSelector(state => state.post);\n  const [updatedTitle, setUpdatedTitle] = useState(title);\n  const [updatedSection, setUpdatedSection] = useState(content);\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const onAddTitle = evt => {\n    setUpdatedTitle(evt.target.value);\n  };\n\n  const onAddContent = evt => {\n    setUpdatedSection(evt.target.value);\n  };\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n    setIsLoading(true);\n    axios.put('https://dashboardcrud-default-rtdb.firebaseio.com/new-post/' + id + \".json\", {\n      content: updatedSection,\n      title: updatedTitle,\n      section\n    }).then(response => {\n      setIsLoading(false);\n      setUpdatedTitle('');\n      setUpdatedSection('');\n      dispatch(PostActions.clearPost());\n      setTimeout(() => {\n        alert('Post updated successfully!');\n      }, 300);\n    }).catch(error => {\n      setIsLoading(false);\n      alert(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isLoading && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.header,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.title,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"title\",\n            onChange: onAddTitle,\n            value: updatedTitle,\n            autoComplete: \"off\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.title,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"section\",\n            value: section,\n            disabled: \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"content\",\n          onChange: onAddContent,\n          value: updatedSection,\n          placeholder: \"Content\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 28\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PostDetail, \"RjQos6bLCbGs4k3LklN7OZh5FYA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PostDetail;\nexport default PostDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["F:/Prasad/DEV/myProjects/MyBlogs/src/components/Post/PostDetail.js"],"names":["classes","useSelector","useDispatch","useState","LoadingSpinner","axios","PostActions","PostDetail","id","title","section","content","state","post","updatedTitle","setUpdatedTitle","updatedSection","setUpdatedSection","isLoading","setIsLoading","dispatch","onAddTitle","evt","target","value","onAddContent","onSubmit","preventDefault","put","then","response","clearPost","setTimeout","alert","catch","error","form","header","actions"],"mappings":"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","sourcesContent":["import classes from \"./PostDetail.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\r\nimport axios from 'axios';\r\nimport {PostActions} from '../../store/post-slice';\r\n\r\nconst PostDetail = () => {\r\n\r\n    const { id, title, section, content } = useSelector((state) => state.post);\r\n    const [updatedTitle, setUpdatedTitle] = useState(title);\r\n    const [updatedSection, setUpdatedSection] = useState(content);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const onAddTitle = (evt) => {\r\n        setUpdatedTitle(evt.target.value);\r\n    }\r\n    const onAddContent = (evt) => {\r\n        setUpdatedSection(evt.target.value);\r\n    }\r\n\r\n    const onSubmit = (evt) => {\r\n\r\n        evt.preventDefault();\r\n        setIsLoading(true);\r\n\r\n        axios.put('https://dashboardcrud-default-rtdb.firebaseio.com/new-post/' + id + \".json\", {\r\n            content: updatedSection,\r\n            title: updatedTitle,\r\n            section\r\n        }).\r\n            then((response) => {\r\n                setIsLoading(false);\r\n                setUpdatedTitle('');\r\n                setUpdatedSection('');\r\n                dispatch(PostActions.clearPost());\r\n\r\n                setTimeout(() => {\r\n                    alert('Post updated successfully!');\r\n                }, 300);\r\n\r\n            }).catch((error) => {\r\n                setIsLoading(false);\r\n                alert(error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!isLoading && <form onSubmit={onSubmit} className={classes.form}>\r\n                <div className={classes.header}>\r\n                    <div className={classes.title}>\r\n                        <input\r\n                            id='title'\r\n                            onChange={onAddTitle}\r\n                            value={updatedTitle}\r\n                            autoComplete=\"off\"\r\n                            required />\r\n                    </div>\r\n                    <div className={classes.title}>\r\n                        <input\r\n                            id='section'\r\n                            value={section}\r\n                            disabled=\"true\" />\r\n                    </div>\r\n                </div>\r\n                <div className={classes.content}>\r\n                    <textarea\r\n                        id='content'\r\n                        onChange={onAddContent}\r\n                        value={updatedSection}\r\n                        placeholder=\"Content\"\r\n                        required />\r\n                </div>\r\n                <div className={classes.actions}>\r\n                    <button >Submit</button>\r\n                </div>\r\n            </form>}\r\n            {isLoading && <LoadingSpinner />}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PostDetail;"]},"metadata":{},"sourceType":"module"}